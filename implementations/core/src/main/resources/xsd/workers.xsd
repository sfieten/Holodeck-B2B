<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2014 The Holodeck B2B Team, Sander Fieten

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  targetNamespace="http://holodeck-b2b.org/schemas/2012/12/workers"
  xmlns="http://holodeck-b2b.org/schemas/2012/12/workers"
  version="5.1.0">
  <xs:annotation>
    <xs:documentation>This XML schema specifies the XML representation of the configuration of a worker pool as used
     by the org.holodeckb2b.common.workerpool.XMLWorkerPoolConfigurator. </xs:documentation>
    <xs:documentation>The structure of the schema is the same as in earlier version in Holodeck B2B. As the worker pool
    name is since version 5.1.0 however set programmatically the name parameter is deprecated. Also the minimum number
    of workers is now zero as the configuration can be refreshed automatically during runtime. For the configuration of
    the automatic refresh a optional refresh parameter has been added.
    </xs:documentation>
  </xs:annotation>
  <xs:element name="workers">
    <xs:annotation>
      <xs:documentation>If the worker pool uses automatic refreshing of its configuration there is no minimum number of
       workers that must be configured as workers can be added later on. If the worker pool however is configured 
       statically it must contain at least one worker definition as it otherwise will quit immediately.
       </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" name="worker">
          <xs:annotation>
            <xs:documentation>The worker element contains the configuration of a specific worker in the pool and consist of five attributes and zero or more parameter child elements. The attributes are:
<ul>
<li>A REQUIRED name attribute of type xs:string that contains the name of this worker</li>
<li>A REQUIRED activate attribute of type xs:boolean which indicates if the worker be active</li>
<li>A OPTIONAL delay attribute of type xs:integer which contains the delay in seconds before starting the worker. If not specified the worker is started immediately.</li>
<li>A REQUIRED workerClass attribute of type xs:string that must contain the name of the class that implements the workers functionality</li>
<li>A OPTIONAL concurrent attribute of type xs:integer that indicates the number of concurrent executions</li>
<li>A OPTIONAL interval attribute of type xs:integer that defines the interval in seconds between repeated executions of the worker.
               If not included the worker will be executed just once. If set to 0 it will run continuously.</li>
</ul>
The parameter child elements can contain settings specific to the worker and consist of a name, value pair.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="parameter" type="parameter"/>
            </xs:sequence>
            <xs:attribute name="name" use="required" type="xs:NCName"/>
            <xs:attribute name="activate" use="required" type="xs:boolean"/>
            <xs:attribute name="delay" use="optional" default="0" type="xs:integer"/>
            <xs:attribute name="workerClass" use="required" type="xs:string"/>
            <xs:attribute name="concurrent" type="xs:integer"/>
            <xs:attribute name="interval" use="optional" type="xs:integer"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="poolName" type="xs:string">
	      <xs:annotation>
	      <xs:documentation>This attribute is <b>deprecated</b> and SHOULD NOT be used anymore. It will be ignored as
	      	the pool name is now set programmatically on instantiation of the pool</xs:documentation>	      
	      </xs:annotation>
      </xs:attribute>
      <xs:attribute name="refresh" type="xs:positiveInteger">
	      <xs:annotation>
	      <xs:documentation>This optional attribute defines the interval, in seconds, at which the configuration should
	      	be refreshed.</xs:documentation>	      
	      </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="parameter">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>
